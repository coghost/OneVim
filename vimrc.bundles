" ==========================================
" bundle 插件管理和配置项
" ==========================================

"------------------------------------------- begin of configs --------------------------------------------

" ################### 包依赖 #####################
" package dependence:  ctags, ag(he_silver_searcher)
" python dependence:   pep8, pyflake

" 非兼容vi模式。去掉讨厌的有关vi一致性模式，避免以前版本的一些bug和局限
set nocompatible
filetype off " required! turn off

" ################### 插件管理 ###################

" inspired by spf13, 自定义需要的插件集合
if !exists('g:bundle_groups')
    " let g:bundle_groups=['python', 'javascript', 'golang', 'php', 'ruby', 'shell', 'markdown', 'html', 'css', 'less', 'coffeescript', 'tmux', 'json', 'beta']
    let g:bundle_groups=['python', 'markdown', 'tmux', 'beta']
endif

" ----------------------------------------------------------------------------
" 使用 vim-plug 管理插件
" vim plugin bundle control, command model
" ----------------------------------------------------------------------------

call plug#begin('~/.vim/bundle')

" 移动光标到插件名上, 使用'#'快速跳转到每个插件的配置处

" syntastic
if v:version < 800
    Plug 'scrooloose/syntastic'
else
    Plug 'w0rp/ale'
endif

" git branch
Plug 'itchyny/vim-gitbranch'

" Group dependencies, vim-snippets depends on ultisnips
" 代码片段快速插入 (snippets中,是代码片段资源,需要学习)
" Snippets are separated from the engine. Add this if you want them:
Plug 'SirVer/ultisnips'
Plug 'honza/vim-snippets'

" 自动补全单引号，双引号等
Plug 'Raimondi/delimitMate'
" trailingwhitespace
" 快速去行尾空格 [, + <Space>]
Plug 'bronson/vim-trailing-whitespace'

" auto complete
" 代码自动补全
" 迄今为止用到的最好的自动VIM自动补全插件
" 重启 :YcmRestartServer
Plug 'Valloric/YouCompleteMe'

" rainbow_parentheses
" 括号显示增强
Plug 'kien/rainbow_parentheses.vim'

" molokai
" 主题 molokai
Plug 'joshdick/onedark.vim'
" https://github.com/chriskempson/base16-vim
Plug 'chriskempson/base16-vim'

Plug 'itchyny/lightline.vim'
Plug 'powerline/powerline'
" language pack for vim
Plug 'sheerun/vim-polyglot'

" nav
" nerdtree nerdtreetabs
Plug 'jistr/vim-nerdtree-tabs'
Plug 'scrooloose/nerdtree', { 'on':  'NERDTreeToggle' }

" tagbar
Plug 'majutsushi/tagbar'

" quick run
" quickrun
Plug 'thinca/vim-quickrun'


if count(g:bundle_groups, 'markdown')
    Plug 'plasticboy/vim-markdown', {'for': 'md'}
    " https://github.com/suan/vim-instant-markdown
    " npm -g install instant-markdown-d
    " Plug 'suan/vim-instant-markdown'
    " let g:instant_markdown_slow = 1
    " let g:instant_markdown_autostart = 0
    " map <F12> :InstantMarkdownPreview<CR>
endif

if count(g:bundle_groups, 'python')
    " for python.vim syntax highlight
    " pythonsyntax
    Plug 'hdima/python-syntax'
    Plug 'hynek/vim-python-pep8-indent'
    Plug 'Glench/Vim-Jinja2-Syntax'

    " isort  https://github.com/timothycrosley/isort#readme + https://github.com/fisadev/vim-isort#installation
    " pip install isort
    Plug 'fisadev/vim-isort'
    " Shift-V 上下选中, ctrl + i 规范化
    let g:vim_isort_map = '<C-i>'
endif

call plug#end()


" #################### statubar ####################
" lightline: https://github.com/itchyny/lightline.vim
let g:lightline = {
    \ 'colorscheme': 'powerline',
    \ 'active': {
    \   'left': [ [ 'mode', 'paste' ],
    \             [ 'gitbranch', 'readonly', 'filename', 'modified' ] ]
    \ },
    \ 'component_function': {
    \   'gitbranch': 'gitbranch#name'
    \ },
    \ }

